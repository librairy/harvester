<!--
  ~ Copyright (c) 2016. Universidad Politecnica de Madrid
  ~
  ~ @author Badenes Olmedo, Carlos <cbadenes@fi.upm.es>
  ~
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

	<groupId>org.librairy</groupId>
    <artifactId>librairy-harvester</artifactId>
    <version>2.0</version>
    <packaging>jar</packaging>
    <name>harvester</name>
    <description>Collect and analyze unstructured files.</description>
    <url>https://github.com/librairy/harvester</url>
    <organization>
        <name>Ontology Engineering Group</name>
        <url>http://www.oeg-upm.net</url>
    </organization>
    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0</url>
        </license>
    </licenses>
    <inceptionYear>2019</inceptionYear>
    <scm>
        <url>https://github.com/librairy/harvester</url>
    </scm>
    <developers>
        <developer>
            <id>cbadenes</id>
            <name>Carlos Badenes Olmedo</name>
            <email>cbadenes at fi.upm.es</email>
        </developer>
    </developers>
    <prerequisites>
        <maven>3.0.0</maven>
    </prerequisites>

	<properties>
        <!-- Project Details -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.java.version>1.8</project.java.version>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- Maven Plugins -->
        <maven.appassembler.plugin.version>1.9</maven.appassembler.plugin.version>
        <maven.assembly.plugin.version>2.5.5</maven.assembly.plugin.version>
        <maven.compiler.plugin.version>3.3</maven.compiler.plugin.version>
        <maven.jar.plugin.version>2.6</maven.jar.plugin.version>
        <maven.site.plugin.version>0.10</maven.site.plugin.version>
        <maven.scala.version>2.15.2</maven.scala.version>
        <maven.surefire.plugin.version>2.11</maven.surefire.plugin.version>
        <maven.war.plugin.version>2.6</maven.war.plugin.version>
        <maven.resources.plugin.version>2.7</maven.resources.plugin.version>
        <surefire.junit.version>2.12</surefire.junit.version>

        <!-- Project Dependencies -->
        <commons-lang3.version>3.5</commons-lang3.version>
        <docker.version>8.7.1</docker.version>
        <guava.version>23.0</guava.version>
        <joda.version>2.9.9</joda.version>
        <jsoup.version>1.11.3</jsoup.version>
        <junit.version>4.12</junit.version>
        <language-detector.version>0.6</language-detector.version>
        <librairy.modeler.version>[1.0,)</librairy.modeler.version>
        <librairy.swagger.version>[0.3,)</librairy.swagger.version>
        <librairy.api.version>[1.0,)</librairy.api.version>
        <logback.version>1.1.3</logback.version>
        <mallet.version>2.0.8.2</mallet.version>
        <mockito.version>1.9.5</mockito.version>
        <solr.version>7.4.0</solr.version>
        <testutils.version>1.0.0</testutils.version>
        <tika.version>1.18</tika.version>
        <unirest.version>1.4.9</unirest.version>
        <velocity.version>1.7</velocity.version>
        <velocity.tool.version>2.0</velocity.tool.version>
    </properties>


    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.9.RELEASE</version>
    </parent>

    <dependencyManagement>
        <dependencies>


            <!-- librAIry Swagger -->
            <dependency>
                <groupId>org.librairy</groupId>
                <artifactId>swagger</artifactId>
                <version>${librairy.swagger.version}</version>
            </dependency>

            <!-- Log Libraries -->
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>

            <!-- Language Detector -->
            <dependency>
                <groupId>com.optimaize.languagedetector</groupId>
                <artifactId>language-detector</artifactId>
                <version>${language-detector.version}</version>
            </dependency>


            <!-- Tika Libraries -->
            <dependency>
                <groupId>org.apache.tika</groupId>
                <artifactId>tika-core</artifactId>
                <version>${tika.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.tika</groupId>
                <artifactId>tika-parsers</artifactId>
                <version>${tika.version}</version>
            </dependency>

            <dependency>
                <groupId>com.mashape.unirest</groupId>
                <artifactId>unirest-java</artifactId>
                <version>${unirest.version}</version>
            </dependency>

            <!-- PDF Libraries -->
            <dependency>
                <groupId>org.jsoup</groupId>
                <artifactId>jsoup</artifactId>
                <version>${jsoup.version}</version>
            </dependency>

            <!-- Solr Libraries -->
            <dependency>
                <groupId>org.apache.solr</groupId>
                <artifactId>solr-solrj</artifactId>
                <version>${solr.version}</version>
            </dependency>

            <!-- Spring Libraries -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-core</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-messaging</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-web</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-expression</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-webmvc</artifactId>
                <version>${spring.version}</version>
            </dependency>


            <!-- Unit tests Libraries -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-all</artifactId>
                <version>${mockito.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${spring.version}</version>
            </dependency>

            <dependency>
                <groupId> com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-jersey-jaxrs</artifactId>
                <version>${swagger.jersey.version}</version>
            </dependency>

            <!-- XML Serializer -->
            <dependency>
                <groupId>xml-apis</groupId>
                <artifactId>xml-apis</artifactId>
                <version>${xml.api.version}</version>
            </dependency>



        </dependencies>
    </dependencyManagement>

    <dependencies>

        <!-- librAIry Swagger -->
        <dependency>
            <groupId>org.librairy</groupId>
            <artifactId>swagger</artifactId>
        </dependency>

        <!-- Rest -->
        <dependency>
            <groupId>com.mashape.unirest</groupId>
            <artifactId>unirest-java</artifactId>
        </dependency>

        <!-- Language Detector -->
        <dependency>
            <groupId>com.optimaize.languagedetector</groupId>
            <artifactId>language-detector</artifactId>
        </dependency>

        <!-- Spring -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-rest</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Solr -->
        <dependency>
            <groupId>org.apache.solr</groupId>
            <artifactId>solr-solrj</artifactId>
        </dependency>

        <!-- Spring Security -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>

        <!-- Unit tests -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Logging -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
        </dependency>


        <!-- Apache Tika -->
        <dependency>
            <groupId>org.apache.tika</groupId>
            <artifactId>tika-core</artifactId>
            <!--<classifier>jdk14</classifier>-->
        </dependency>
        <dependency>
            <groupId>org.apache.tika</groupId>
            <artifactId>tika-parsers</artifactId>
            <!--	<classifier>jdk14</classifier>-->
        </dependency>

        <!-- JSoup Extractor: For lucene classifier -->
        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
        </dependency>

        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20160212</version>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/bin</directory>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>
        <finalName>${project.artifactId}</finalName>
        <plugins>

            <!-- Maven Compiler Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <source>${project.java.version}</source>
                    <target>${project.java.version}</target>
                    <compilerVersion>${project.java.version}</compilerVersion>
                </configuration>
            </plugin>

            <!-- Maven Test Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.11</version>
                <configuration>
                    <excludes>
                        <exclude>%regex[.*IntTest.*]</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <!-- Spring-Boot Unique Jar -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <!-- Docker Plugin -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.4.11</version><!-- 0.4.11-->
                <configuration>
                    <imageName>librairy/api</imageName>
                    <serverId>dockerhub</serverId>
                    <dockerDirectory>${project.basedir}/src/main/docker</dockerDirectory>
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                        <resource>
                            <targetPath>/bin</targetPath>
                            <directory>${project.basedir}/src/main/bin</directory>
                            <include>**</include>
                        </resource>
                    </resources>
                    <forceTags>true</forceTags>
                    <imageTags>
                        <imageTag>${project.version}</imageTag>
                        <imageTag>latest</imageTag>
                    </imageTags>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
